name: Build OpenIPC Firmware with Masina

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build OpenIPC Firmware with Masina
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Update system packages
      run: |
        sudo apt update
        
    - name: Install build dependencies
      run: |
        sudo apt install -y \
          g++-arm-linux-gnueabihf \
          build-essential \
          git \
          make
          
    - name: Clone OpenIPC firmware
      run: git clone https://github.com/OpenIPC/firmware.git
        
    - name: Clone QuadroFleet-Masina
      run: git clone -b opt https://github.com/beep-systems/quadrofleet-masina.git
        
    - name: Build Masina client
      run: |
        cd quadrofleet-masina/client
        make clean || true
        make || true
        
    - name: Copy Masina files
      run: |
        cp -r quadrofleet-masina/client/drop/* firmware/ || true
        
    - name: List firmware contents
      run: ls -la firmware/
        
    - name: Build firmware
      run: |
        cd firmware
        echo "🚀 Starting firmware build for specific platform..."
        echo "Available platforms:"
        ls -la configs/ | head -10
        echo ""
        # Будуємо для конкретної платформи (наприклад SSC30KQ)
        make PLATFORM=ssc30kq || make || true
        echo "✅ Build process completed"
        
    - name: List build results
      run: |
        echo "=== ALL FIRMWARE FILES ==="
        find firmware/ -name "*.squashfs*" -o -name "*mage*" -o -name "*.bin" -o -name "*.img" | head -20
        echo ""
        echo "=== LOOKING FOR SPECIFIC FILES ==="
        find firmware/ -name "*ssc30kq*" | while read file; do
          echo "🎯 $file ($(du -h "$file" | cut -f1))"
        done
        echo ""
        echo "=== ROOTFS AND UIMAGE FILES ==="
        find firmware/ \( -name "rootfs.squashfs*" -o -name "uImage*" -o -name "*mage*" \) | while read file; do
          echo "📦 $file ($(du -h "$file" | cut -f1))"
        done
        
    - name: Prepare firmware package
      run: |
        mkdir -p firmware-package
        echo "📦 Looking for specific firmware files..."
        
        # Шукаємо файли для конкретної платформи
        find firmware/ -name "*ssc30kq*" | while read file; do
          cp "$file" firmware-package/ && echo "✅ Copied: $(basename "$file")"
        done
        
        # Якщо не знайшли ssc30kq, шукаємо загальні файли
        if [ ! "$(ls -A firmware-package/)" ]; then
          echo "⚠️ No ssc30kq files found, looking for generic files..."
          find firmware/ \( -name "rootfs.squashfs*" -o -name "*Image*" -o -name "*mage*" \) | head -10 | while read file; do
            cp "$file" firmware-package/ && echo "✅ Copied: $(basename "$file")"
          done
        fi
        
        # Створюємо md5sum файли якщо їх немає
        cd firmware-package
        for file in *.squashfs* *Image* *mage* 2>/dev/null; do
          if [ -f "$file" ] && [ ! -f "$file.md5sum" ]; then
            md5sum "$file" > "$file.md5sum"
            echo "✅ Created: $file.md5sum"
          fi
        done
        
        echo ""
        echo "📋 Final firmware package contents:"
        ls -lah
        echo ""
        echo "📏 Total package size:"
        du -sh .
        
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: openipc-firmware-final
        path: firmware-package/
        retention-days: 14
