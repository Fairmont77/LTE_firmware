name: Build OpenIPC Firmware

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        target: [SSC30KQ_4G, SSC3380_4G]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-arm-linux-gnueabihf build-essential git
    
    - name: Clone OpenIPC firmware repository
      run: |
        git clone https://github.com/OpenIPC/firmware.git
    
    - name: Clone QuadroFleet-Masina project
      run: |
        git clone -b opt https://github.com/beep-systems/quadrofleet-masina.git
        
    - name: Investigate project structure
      run: |
        echo "=== QuadroFleet-Masina structure ==="
        ls -la quadrofleet-masina/
        echo "=== Client directory ==="
        ls -la quadrofleet-masina/client/
        echo "=== Checking Makefile ==="
        head -20 quadrofleet-masina/client/Makefile || echo "Makefile not found"
    
    - name: Build Masina client
      run: |
        cd quadrofleet-masina/client
        make clean
        make
        # Показати що створилося після збірки
        ls -la
        find . -type f -name "*" | head -20
    
    - name: Copy Masina client files to firmware directory
      run: |
        # Перевірити структуру директорій
        echo "=== Checking quadrofleet-masina/client directory ==="
        ls -la quadrofleet-masina/client/
        echo "=== Checking for drop directory ==="
        ls -la quadrofleet-masina/client/drop/ || echo "Drop directory not found"
        
        # Спробувати знайти потрібні файли
        echo "=== Finding built files ==="
        find quadrofleet-masina/client -type f -name "*.so" -o -name "*.a" -o -name "masina*" | head -20
        
        # Копіювати файли (якщо drop існує)
        if [ -d "quadrofleet-masina/client/drop" ]; then
          cp -r quadrofleet-masina/client/drop/* firmware/
        elif [ -d "quadrofleet-masina/drop" ]; then
          # Можливо drop на рівень вище
          cp -r quadrofleet-masina/drop/* firmware/
        else
          echo "WARNING: drop directory not found, looking for built binaries..."
          # Пошук бінарних файлів masina
          find quadrofleet-masina -name "masina" -type f -executable | while read file; do
            echo "Found: $file"
            cp "$file" firmware/ || true
          done
          # Пошук shared libraries
          find quadrofleet-masina -name "*.so" -type f | while read file; do
            echo "Found library: $file"
            cp "$file" firmware/ || true
          done
        fi
    
    - name: Build firmware
      run: |
        cd firmware
        make clean
        make BOARD=${{ matrix.target }}
    
    - name: Find and rename output files
      run: |
        cd firmware/output/images
        # Знайти файли прошивки
        if [ -f "rootfs.squashfs.${{ matrix.target }}" ]; then
          mv rootfs.squashfs.${{ matrix.target }} rootfs-${{ matrix.target }}-${{ github.sha }}.squashfs
        fi
        if [ -f "uImage.${{ matrix.target }}" ]; then
          mv uImage.${{ matrix.target }} uImage-${{ matrix.target }}-${{ github.sha }}
        fi
        # Показати які файли є в директорії
        ls -la
    
    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openipc-firmware-${{ matrix.target }}-${{ github.sha }}
        path: |
          firmware/output/images/rootfs-*.squashfs
          firmware/output/images/uImage-*
        retention-days: 30
    
    - name: Create Release (optional - only on tags)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          firmware/output/images/rootfs-*.squashfs
          firmware/output/images/uImage-*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}